// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestGraphQL.Data;

#nullable disable

namespace SyncApiTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("TestGraphQL.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Breed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastSyncedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LocalDateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OwnerId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ServerDateUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec4edfea-e812-48be-9463-23d25039068c"),
                            Age = 9,
                            Breed = 0,
                            Color = "Black",
                            Deleted = false,
                            Name = "Lucy",
                            OwnerId = new Guid("03c40583-4162-4bac-bf88-94f466da94f4")
                        },
                        new
                        {
                            Id = new Guid("c3ea1c74-b3a4-4ff1-bd49-7c778197b45f"),
                            Age = 3,
                            Breed = 1,
                            Color = "Golden",
                            Deleted = false,
                            Name = "Ruby",
                            OwnerId = new Guid("03c40583-4162-4bac-bf88-94f466da94f4")
                        },
                        new
                        {
                            Id = new Guid("309cd235-feb1-4059-a713-7d1d78de22b9"),
                            Age = 5,
                            Breed = 2,
                            Color = "Brown",
                            Deleted = false,
                            Name = "Max",
                            OwnerId = new Guid("be015344-fdb6-42aa-b8f8-a0a2c9d178d7")
                        },
                        new
                        {
                            Id = new Guid("5eae9102-e649-4c41-b6f6-2010e5628cea"),
                            Age = 2,
                            Breed = 3,
                            Color = "White",
                            Deleted = false,
                            Name = "Buddy",
                            OwnerId = new Guid("be015344-fdb6-42aa-b8f8-a0a2c9d178d7")
                        });
                });

            modelBuilder.Entity("TestGraphQL.Models.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastSyncedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LocalDateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ServerDateUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("03c40583-4162-4bac-bf88-94f466da94f4"),
                            Age = 35,
                            Deleted = false,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("be015344-fdb6-42aa-b8f8-a0a2c9d178d7"),
                            Age = 30,
                            Deleted = false,
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("TestGraphQL.Models.Dog", b =>
                {
                    b.HasOne("TestGraphQL.Models.Owner", "Owner")
                        .WithMany("Dogs")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("TestGraphQL.Models.Owner", b =>
                {
                    b.Navigation("Dogs");
                });
#pragma warning restore 612, 618
        }
    }
}
